@model ML.Usuarios
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>

	* {
		background: #f1f2f6;
		margin: 0;
		padding: 0;
	}

	.Agregar-button{
		background-color: green;
		border: none;
		color: white;
		padding: 15px 32px;
		text-align: center;
		text-decoration: none;
		display: inline-block;
		font-size: 16px;
		margin: 4px 2px;
		cursor: pointer;
		border-radius: 12px; /* Esto hace que el botón sea redondeado */
	}

	.chat-button {
		background-color: aquamarine;
		border: none;
		color: black;
		padding: 15px 32px;
		text-align: center;
		text-decoration: none;
		display: inline-block;
		font-size: 16px;
		margin: 4px 2px;
		cursor: pointer;
		border-radius: 12px; /* Esto hace que el botón sea redondeado */
	}


	.img-wrapper {
		width: 300px;
		height: 400px;
		position: relative;
		overflow: hidden;
	}

		.img-wrapper:before {
			content: '';
			position: absolute;
			top: 0;
			left: 180%;
			height: 100%;
			width: 100%;
			background: rgba(255,255,255,.3);
			z-index: 1;
			transform: skew(45deg);
			transition: .5s;
		}

		.img-wrapper:hover:before {
			left: -180%;
		}

		.img-wrapper img {
			height: 400px;
			width: 300px;
			filter: grayscale(100%);
			transition: 2s;
		}

		.img-wrapper:hover img {
			filter: grayscale(0%);
			transform: scale(1.1);
		}

		.img-wrapper h2 {
			background: tomato;
			font-family: Poppins;
			color: #fff;
			text-align: center;
			text-transform: uppercase;
			margin: 0;
			padding: 10px 0;
			position: absolute;
			bottom: 0;
			width: 100%;
			transform: perspective(400px) rotateY(90deg);
			transform-origin: right;
			transition: 1s;
		}

		.img-wrapper:hover h2 {
			transform: perspective(400px) rotateY(0deg);
		}

		.img-wrapper ul {
			position: absolute;
			top: 0;
			left: 0;
			margin: 0;
			padding: 0;
			list-style: none;
			background: rgba(255,255,255,0);
		}

			.img-wrapper ul li {
				background: #333;
				height: 40px;
				width: 40px;
				text-align: center;
				line-height: 40px;
				transform: perspective(800px) rotateY(90deg);
				transition: .5s;
				transform-origin: left;
			}

		.img-wrapper:hover ul li {
			transform: perspective(800px) rotateY(0deg);
		}

			.img-wrapper:hover ul li:nth-child(1) {
				transition-delay: .2s;
			}

			.img-wrapper:hover ul li:nth-child(2) {
				transition-delay: .6s;
			}

			.img-wrapper:hover ul li:nth-child(3) {
				transition-delay: .8s;
			}

			.img-wrapper:hover ul li:nth-child(4) {
				transition-delay: 1s;
			}

		.img-wrapper ul li a {
			color: tomato;
			background: rgba(255,255,255,0);
		}

		.img-wrapper ul li i {
			color: tomato;
			background: rgba(255,255,255,0);
		}

			.img-wrapper ul li i:hover {
				color: #fff;
				background: rgba(255,255,255,0);
			}
</style>
<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<title>Profile Image hover effect</title>
	<link rel="stylesheet" href="style.css">

	<!-- ------------ Font awesome CDN link ------------------ -->
	<link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.8.1/css/all.css">
</head>
<body>
	<div class="row">
	@foreach(ML.Usuarios usuarios in Model.UsuariosObject){
			<div class="col-md-4 col-sm-6">
		<div class="image-area">
			<div class="img-wrapper">
						@if(usuarios.Imagen == null)
						{
							<img src="https://cdn-icons-png.flaticon.com/512/456/456212.png" />
						}
						else
						{
							<img src="@usuarios.Imagen" alt="Atul Prajapati">
						}
				<h2>@usuarios.Nombre @usuarios.ApellidoPaterno @usuarios.ApellidoMaterno</h2>
				<ul>
					<li><a href="https://github.com/atuljustano"><i class="fab fa-github"></i></a></li>
					<li><a href="https://www.instagram.com/atulkprajapati2000/"><i class="fab fa-instagram"></i></a></li>
					<li><a href="https://twitter.com/atuljustano"><i class="fab fa-twitter"></i></a></li>
					<li><a href="https://www.youtube.com/channel/UCf-KfxuY8PZBSD_8RW2nYsw"><i class="fab fa-youtube"></i></a></li>
				</ul>	
			</div>
					<button class="Agregar-button">Agregar como Amigo</button>
					<button class="chat-button">CHAT</button>
		</div>
		</div>
	}
	</div>
	<div class="modal fade" id="chatModal" tabindex="-1" aria-labelledby="chatModalLabel" aria-hidden="true">
		<div class="modal-dialog">
			<div class="modal-content">
				<div class="modal-header">
					<h1 class="modal-title fs-5" id="chatModalLabel">Chat</h1>
					<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
				</div>
				<div class="modal-body">
					<div id="messages" style="height: 300px; overflow-y: scroll;">
						<!-- Los mensajes del chat irán aquí -->
					</div>
					<input id="messageInput" type="text" placeholder="Escribe un mensaje...">
				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
					<button id="sendButton" type="button" class="btn btn-primary">Enviar</button>
				</div>
			</div>
		</div>
	</div>


</body>
</html>
<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/3.1.7/signalr.min.js"></script>
<script src="https://code.jquery.com/jquery-3.2.1.min.js"></script>
@section Scripts{
	<script>
		$(document).ready(function () {
			$(".chat-button").click(function () {
				$("#chatModal").modal('show');
			});
		});

		var connection = new signalR.HubConnectionBuilder().withUrl("/chatHub").build();

		connection.start().catch(function (err) {
			return console.error(err.toString());
		});

		document.getElementById("sendButton").addEventListener("click", function (event) {
			var message = document.getElementById("messageInput").value;
			connection.invoke("SendMessage", message).catch(function (err) {
				return console.error(err.toString());
			});
			event.preventDefault();
		});

		connection.on("ReceiveMessage", function (message) {
			var msg = document.createElement("div");
			msg.textContent = message;
			document.getElementById("messages").appendChild(msg);
		});

	</script>
}